{"ast":null,"code":"import { getItineraryById } from '../services/itinerary.service';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'vue-chartjs';\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default {\n  name: 'Itinerary-chart',\n  components: {\n    Line\n  },\n  data() {\n    return {\n      currentId: 1,\n      itineraryData: null,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      },\n      data: {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n        datasets: [{\n          label: 'Data One',\n          backgroundColor: '#f87979',\n          data: [40, 39, 10, 40, 39, 80, 40]\n        }]\n      }\n    };\n  },\n  methods: {\n    getItineraryById(id) {\n      if (id) this.currentId = id;\n      getItineraryById(this.currentId).then(data => this.itineraryData = data);\n    }\n  },\n  beforeMount() {\n    this.getItineraryById();\n  },\n  computed: {\n    myStyles() {\n      return {\n        height: `${100}px`\n      };\n    }\n  }\n};","map":{"version":3,"mappings":"AA0BA,SAASA,gBAAe,QAAS,+BAA+B;AAEhE,SACEC,KAAI,IAAKC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAK,QACA,UAAS;AAChB,SAASC,IAAG,QAAS,aAAY;AAEjCR,OAAO,CAACS,QAAQ,CACdR,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAK,CACP;AAEA,eAAe;EACbG,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,CAAC;MACZC,aAAa,EAAE,IAAI;MACnBC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE;MACvB,CAAC;MACDL,IAAI,EAAE;QACJM,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;QACxEC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,UAAU;UACjBC,eAAe,EAAE,SAAS;UAC1BT,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QACnC;MAEJ;IACF;EACF,CAAC;EACDU,OAAO,EAAE;IACPxB,gBAAgB,CAACyB,EAAE,EAAE;MACnB,IAAIA,EAAE,EAAE,IAAI,CAACV,SAAQ,GAAIU,EAAE;MAC3BzB,gBAAgB,CAAC,IAAI,CAACe,SAAS,CAAC,CAACW,IAAI,CAACZ,IAAG,IAAK,IAAI,CAACE,aAAY,GAAIF,IAAI,CAAC;IAC1E;EACF,CAAC;EACDa,WAAW,GAAE;IACX,IAAI,CAAC3B,gBAAgB,EAAC;EACxB,CAAC;EACD4B,QAAQ,EAAE;IACRC,QAAO,GAAK;MACV,OAAO;QACLC,MAAM,EAAG,GAAE,GAAI;MACjB;IACF;EACF;AACF","names":["getItineraryById","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","register","name","components","data","currentId","itineraryData","options","responsive","maintainAspectRatio","labels","datasets","label","backgroundColor","methods","id","then","beforeMount","computed","myStyles","height"],"sourceRoot":"","sources":["/Users/Josh/Trabajo/aerialoop/aerialoop-frontend/src/components/ItineraryCharts.vue"],"sourcesContent":["<template>\n  <img alt=\"logo\" src=\"../assets/logo.png\">\n  <div>\n    <h3>Flight Itineraries</h3>\n    <p>\n      This app allows you to check essential information on different itineraries.\n    </p>\n    <h3>Available itineraries</h3>\n    <ul>\n      <li><button :class=\"[currentId == 1 ? 'selected' : '']\" @click=\"getItineraryById(1)\">Itinerary #1</button></li>\n      <li><button :class=\"[currentId == 2 ? 'selected' : '']\" @click=\"getItineraryById(2)\">Itinerary #2</button></li>\n      <li><button :class=\"[currentId == 3 ? 'selected' : '']\" @click=\"getItineraryById(3)\">Itinerary #3</button></li>\n      <li><button :class=\"[currentId == 4 ? 'selected' : '']\" @click=\"getItineraryById(4)\">Itinerary #4</button></li>\n      <li><button :class=\"[currentId == 5 ? 'selected' : '']\" @click=\"getItineraryById(5)\">Itinerary #5</button></li>\n    </ul>\n    <p>\n      <strong>From:</strong> {{ itineraryData.from }} <strong>- To:</strong> {{ itineraryData.to }}\n    </p>\n    <p>\n      <strong>Day starting time in milliseconds since midnight:</strong> {{ itineraryData.startDayTime }}\n    </p>\n    <Line :data=\"data\" :options=\"options\" :style=\"myStyles\" />\n  </div>\n</template>\n\n<script>\nimport { getItineraryById } from '../services/itinerary.service';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js'\nimport { Line } from 'vue-chartjs'\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n)\n\nexport default {\n  name: 'Itinerary-chart',\n  components: {\n    Line\n  },\n  data() {\n    return {\n      currentId: 1,\n      itineraryData: null,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      },\n      data: {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n        datasets: [\n          {\n            label: 'Data One',\n            backgroundColor: '#f87979',\n            data: [40, 39, 10, 40, 39, 80, 40]\n          }\n        ]\n      }\n    }\n  },\n  methods: {\n    getItineraryById(id) {\n      if (id) this.currentId = id;\n      getItineraryById(this.currentId).then(data => this.itineraryData = data);\n    }\n  },\n  beforeMount(){\n    this.getItineraryById()\n  },\n  computed: {\n    myStyles () {\n      return {\n        height: `${100}px`,\n      }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nimg {\n  width: 15%;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\nbutton {\n  margin-bottom: 25px;\n  border-radius: 12px;\n  border: 2px solid #0A2036;\n  padding: 14px 40px;\n  background-color: white;\n  color: #0A2036;\n  transition-duration: 0.4s;\n}\nbutton:hover, .selected{\n  background-color: #0A2036;\n  color: white;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}